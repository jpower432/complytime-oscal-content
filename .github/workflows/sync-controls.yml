name: CaC to OSCAL Control Models
on:
  workflow_dispatch:
   inputs:
      cac-reference:
        description: Compliance as Code git reference
        required: true
        default: 'master'
      policy-id:
        required: true
        description: Name of CaC control policy to process
      product:
        required: true
        description: Name of CaC product to process

permissions: read-all

jobs:
  update-controls:
    name: Update control data
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: quay.io/continuouscompliance/trestle-bot:dev-main-0ceeb01
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Checkout CaC repo
        uses: actions/checkout@v4
        with:
          repository: ComplianceAsCode/content
          ref: ${{ github.event.inputs.cac-reference }}
          path: ${{ runner.workspace }}/content
      - name: Set git safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Update catalog
        env:
          CAC_CONTENT_ROOT:  ${{ github.workspace }}/content
          POLICY: ${{ github.event.inputs.policy-id }}
        run: |
          trestlebot sync-cac-content catalog \
          --cac-content-root "$CAC_CONTENT_ROOT" \
          --policy-id "$POLICY" \
          --oscal-catalog "$POLICY" \
          --dry-run
      - name: Update profile
        env:
          CAC_CONTENT_ROOT: ${{ runner.workspace }}/content
          POLICY: ${{ github.event.inputs.policy-id }}
          PRODUCT:  ${{ github.event.inputs.product}}
        run: |
          trestlebot sync-cac-content profile \
          --cac-content-root "$CAC_CONTENT_ROOT" \
          --policy-id "$POLICY" \
          --oscal-catalog "$POLICY" \
          --product "$PRODUCT" \
          --dry-run
